<?xml version="1.0"?>
<launch>    
    <env name="GAZEBO_MODEL_PATH" value="$(find multi_critic_rl)/models/" />
	<!-- <env name="GAZEBO_RESOURCE_PATH" value="$(find plywood_mazes)/media/materials" /> -->

	<!-- Arguments that can be passed to this launch file from the CLI, for example paused:=true -->
	  <arg name="paused" default="false"/>
	  <arg name="use_sim_time" default="true"/>
	  <arg name="gui" default="true"/>
	  <arg name="headless" default="false"/>
	  <arg name="debug" default="false"/>
	  <arg name="physics" default="ode"/>
	  <arg name="extra_gazebo_args" default="--verbose"/>
	  <!-- Configure as required -->
	  <!-- <arg name="world_name" default="worlds/empty.world"/> -->
	  <arg name="world_name" default="$(find multi_critic_rl)/worlds/maze5.world"/>

	<!-- Launch Gazebo with the specified world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
	  <arg name="paused" value="$(arg paused)" />
	  <arg name="use_sim_time" value="$(arg use_sim_time)" />
	  <arg name="gui" value="$(arg gui)" />
	  <arg name="headless" value="$(arg headless)" />
	  <arg name="debug" value="$(arg debug)" />
	  <arg name="physics" default="$(arg physics)"/>
	  <arg name="extra_gazebo_args" value="$(arg extra_gazebo_args)"/>
	  <arg name="world_name" value="$(arg world_name)" />    
	</include>
    
    <arg name="x" default="-4.5" />
	<arg name="y" default="-3.0" />
	<arg name="z" default="0.0" />

	<arg name="model" default="waffle_pi" doc="model type [burger, waffle, waffle_pi]"/>
    
    <!-- Spawn turtlebot3_gazebo -->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
	<node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x) -y $(arg y) -z $(arg z
	) -param robot_description" />
	
	<node
		name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		<param name="publish_frequency" type="double" value="30.0"/>
	</node>
	
	<!--
	<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
	    <param name="base_frame" value="base_footprint"/>
	    <param name="odom_frame" value="odom"/>
	    <param name="map_update_interval" value="0.1"/>
	    <param name="maxUrange" value="6.0"/>
	    <param name="maxRange" value="8.0"/>
	    <param name="sigma" value="0.05"/>
	    <param name="kernelSize" value="1"/>
	    <param name="lstep" value="0.05"/>
	    <param name="astep" value="0.05"/>
	    <param name="iterations" value="5"/>
	    <param name="lsigma" value="0.075"/>
	    <param name="ogain" value="3.0"/>
	    <param name="lskip" value="0"/>
	    <param name="minimumScore" value="200"/>
	    <param name="srr" value="0.01"/>
	    <param name="srt" value="0.02"/>
	    <param name="str" value="0.01"/>
	    <param name="stt" value="0.02"/>
	    <param name="linearUpdate" value="0.5"/>
	    <param name="angularUpdate" value="0.436"/>
	    <param name="temporalUpdate" value="-1.0"/>
	    <param name="resampleThreshold" value="0.5"/>
	    <param name="particles" value="80"/>

	    <param name="xmin" value="-1.0"/>
	    <param name="ymin" value="-1.0"/>
	    <param name="xmax" value="1.0"/>
	    <param name="ymax" value="1.0"/>

	    <param name="delta" value="0.05"/>
	    <param name="llsamplerange" value="0.01"/>
	    <param name="llsamplestep" value="0.01"/>
	    <param name="lasamplerange" value="0.005"/>
	    <param name="lasamplestep" value="0.005"/>
	    <remap from="scan" to="/scan"/>
	  </node>
	   -->
    
</launch>
